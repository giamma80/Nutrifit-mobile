name: backend-ci

on:
  push:
    paths:
      - 'backend/**'
      - '.github/workflows/backend-ci.yml'
  pull_request:
    paths:
      - 'backend/**'
      - '.github/workflows/backend-ci.yml'

jobs:
  build-test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Ensure pip cache dir exists (avoid warning)
        run: |
          mkdir -p /home/runner/.cache/pip

      - name: Setup Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "${HOME}/.local/bin" >> $GITHUB_PATH

      - name: Sync deps (prod + dev)
        working-directory: backend
        run: |
          uv sync --all-extras --dev

      - name: Lint (flake8)
        working-directory: backend
        run: |
          uv run flake8 .

      - name: Type check (mypy)
        working-directory: backend
        run: |
          uv run mypy .

      - name: Tests (pytest)
        working-directory: backend
        run: |
          uv run pytest

      - name: Strawberry Schema Export
        working-directory: backend
        run: |
          uv run python scripts/export_schema.py --out schema_export.graphql

      - name: Upload schema artifact
        uses: actions/upload-artifact@v4
        with:
          name: backend-schema
          path: backend/schema_export.graphql

      - name: Docker Build (validation)
        run: |
          docker build --build-arg VERSION=$(grep -m1 '^version' backend/pyproject.toml | sed -E 's/^[^0-9]*([0-9]+\.[0-9]+\.[0-9]+).*/\1/') -t nutrifit-backend:ci backend

      - name: Run container
        run: |
          docker run -d --rm -p 8080:8080 --name nutrifit-backend-ci nutrifit-backend:ci
          sleep 3

      - name: Integration test (health/version/graphql)
        working-directory: backend
        run: |
          bash scripts/integration_test.sh

      - name: Stop container
        if: always()
        run: |
          docker stop nutrifit-backend-ci || true
