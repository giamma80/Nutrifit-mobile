name: backend-ci

on:
  push:
    paths:
      - 'backend/**'
      - 'CHANGELOG.md'
      - '.github/workflows/backend-ci.yml'
  pull_request:
    paths:
      - 'backend/**'
      - '.github/workflows/backend-ci.yml'

concurrency:
  group: backend-ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  changes:
    name: Detect relevant backend changes
    runs-on: ubuntu-latest
    outputs:
      run_docker: ${{ steps.filter.outputs.run_docker }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Path filter
        id: filter
        uses: dorny/paths-filter@v3
        with:
          filters: |
            run_docker:
              - 'backend/**'
              - '!backend/README.md'
              - '!README.md'
              - '!CHANGELOG.md'
              - '!**/*.md'
              - '.github/workflows/backend-ci.yml'
  preflight:
    name: Backend full preflight (format/lint/tests/schema + commitlint + markdown)
    runs-on: ubuntu-latest
    needs: changes
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "${HOME}/.local/bin" >> $GITHUB_PATH
      - name: Setup Node 20 (commitlint/markdownlint)
        uses: actions/setup-node@v5
        with:
          node-version: '20'
          cache: 'npm'
      - name: Install optional Node deps (if package.json exists)
        run: |
          if [ -f package.json ]; then npm ci; fi
      - name: Sync deps (backend)
        working-directory: backend
        run: uv sync --all-extras --dev
      - name: Run preflight (strict md)
        working-directory: backend
        env:
          NO_COLOR: "1"
          MD_MODE: git
          MD_STRICT: "1"
        run: ./make.sh preflight
      - name: Upload preflight summary
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: backend-preflight-summary
          path: backend/logs/preflight_summary.log
      - name: Upload markdownlint log
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: markdownlint-log
          path: backend/logs/md_lint_latest.log
      - name: Export schema artifact
        if: always()
        working-directory: backend
        run: |
          uv run python scripts/export_schema.py --out schema_export.graphql || true
      - name: Upload schema export
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: backend-schema
          path: backend/schema_export.graphql

  docker-integration:
    name: Docker build & integration tests
    runs-on: ubuntu-latest
    needs: [preflight, changes]
    if: needs.changes.outputs.run_docker == 'true'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Docker Build (validation)
        run: docker build --build-arg VERSION=$(grep -m1 '^version' backend/pyproject.toml | sed -E 's/^[^0-9]*([0-9]+\.[0-9]+\.[0-9]+).*/\1/') -t nutrifit-backend:ci backend
      - name: Run container
        run: |
          docker run -d --rm -p 8080:8080 --name nutrifit-backend-ci nutrifit-backend:ci
          sleep 5
      - name: Integration test (health/version/graphql)
        working-directory: backend
        env:
          INTEG_RETRIES: 40
          INTEG_SLEEP: 1
        run: bash scripts/integration_test.sh
      - name: Docker logs (on failure)
        if: failure()
        run: |
          echo "==== docker ps ===="
          docker ps -a
          echo "==== container logs nutrifit-backend-ci ===="
          docker logs nutrifit-backend-ci || true
      - name: Stop container
        if: always()
        run: docker stop nutrifit-backend-ci || true

  maintenance:
    name: Maintenance (changelog + badges)
    needs: [docker-integration, changes]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' && needs.changes.outputs.run_docker == 'true'
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "${HOME}/.local/bin" >> $GITHUB_PATH
      - name: Sync deps
        working-directory: backend
        run: uv sync --all-extras --dev
      - name: Run maintenance-ci target
        working-directory: backend
        run: ./make.sh maintenance-ci

# NOTE:
# - Workflow unificato: questo file esegue preflight completo + docker + maintenance.
# - Rimuovere backend-preflight.yml (legacy) per evitare run duplicate.
